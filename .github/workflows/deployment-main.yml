name: fatura-service

on:
  push:
    branches: [ main ]

jobs:
    compile:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        - name: Set up JDK 17
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: 17
        - name: Configure Maven settings
          run: |
            mkdir -p ~/.m2
            echo "<settings><servers><server><id>github</id><username>\${env.GITHUB_ACTOR}</username><password>\${env.GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
          env:
            GITHUB_ACTOR: ${{ github.actor }}
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        - name: Cache Maven dependencies
          uses: actions/cache@v3
          with:
            path: ~/.m2/repository
            key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            restore-keys: |
              ${{ runner.os }}-maven-
        - name: Build with Maven
          run: mvn clean install -DskipTests
          env:
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          
    test:
        runs-on: ubuntu-latest
        name: Running tests
        needs: compile
        steps:
          - uses: actions/checkout@v4
          - name: Set up JDK 17
            uses: actions/setup-java@v4
            with:
              distribution: 'temurin'
              java-version: 17
          - name: Configure Maven settings
            run: |
              mkdir -p ~/.m2
              echo "<settings><servers><server><id>github</id><username>\${env.GITHUB_ACTOR}</username><password>\${env.GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
            env:
              GITHUB_ACTOR: ${{ github.actor }}
              GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          - name: Cache Maven dependencies
            uses: actions/cache@v3
            with:
              path: ~/.m2/repository
              key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
              restore-keys: |
                ${{ runner.os }}-maven-
          - name: Run unit tests
            run: mvn test
            env:
              GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
            
    docker:
        name: Publish - Docker Hub
        runs-on: ubuntu-latest
        needs: [test]
        steps:
          - name: Checkout code
            uses: actions/checkout@v4
          - name: Create Maven settings.xml
            run: |
                echo "<settings><servers><server><id>github</id><username>${{ github.actor }}</username><password>${{ secrets.GH_TOKEN }}</password></server></servers></settings>" > settings.xml
          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKER_USER }}
              password: ${{ secrets.DOCKER_PASS }}
          - name: Publish to Docker Hub
            uses: docker/build-push-action@v5
            with:
              context: .
              file: ./Dockerfile
              push: true
              tags: sirondba/fatura-services:latest
            
#    deploy:
#        runs-on: ubuntu-latest
#        name: Deploy Heroku
#        needs: docker
#        steps:
#        - uses: actions/checkout@v2
#        - name: Deploy to Heroku
#          uses: AkhileshNS/heroku-deploy@v3.8.8
#          with:
#            heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#            heroku_email: ${{secrets.HEROKU_EMAIL}}
#            heroku_app_name: ${{secrets.HEROKU_APP}}
#
#    notifySlack:
#        name: Notify slack
#        runs-on: ubuntu-latest
#        needs: [deploy]
#        steps:
#        - uses: actions/checkout@v2
#        - name: Notify Slack
#          uses: drilonrecica/action-slack-notify@0.0.3
#          env:
#            SLACK_TITLE: Notify Deploy
#            SLACK_ICON: https://github.com/rtCamp.png?size=48
#            SLACK_MESSAGE: ${{ job.status }} 'A API caderneta-user-services:v${{github.run_number}}, já estar disponivel no ambiente de produção'
#            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
            
    